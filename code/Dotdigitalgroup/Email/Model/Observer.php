<?php

class Dotdigitalgroup_Email_Model_Observer
{
    /**
     * Before block to html observer.
     *
     * @param Varien_Event_Observer $observer
     */
    public function beforeBlockToHtml(Varien_Event_Observer $observer)
    {
        $grid = $observer->getBlock();

        /**
         * Mage_Adminhtml_Block_Customer_Grid
         */
        if ($grid instanceof Mage_Adminhtml_Block_Promo_Quote_Edit_Tab_Coupons_Grid) {
            $grid->addColumnAfter(
                'expiration_date',
                array(
                    'header' => Mage::helper('salesrule')->__('Expiration date'),
                    'index' => 'expiration_date',
                    'type' => 'datetime',
                    'default' => '-',
                    'align' => 'center',
                    'width' => '160'
                ),
                'created_at'
            )->addColumnAfter(
                'generated_by_dotmailer',
                array(
                    'header' => Mage::helper('salesrule')->__('Generated By dotmailer'),
                    'index' => 'generated_by_dotmailer',
                    'type' => 'options',
                    'options' => array('null' => 'No', '1' => 'Yes'),
                    'width' => '30',
                    'align' => 'center',
                    'filter_condition_callback' => array(
                        $this,
                        'filterCallbackContact'
                    )
                ),
                'expiration_date'
            );
        }
    }

    /**
     * Callback action for.
     *
     * @param $collection
     * @param $column
     */
    public function filterCallbackContact($collection, $column)
    {
        $field = $column->getFilterIndex() ? $column->getFilterIndex()
            : $column->getIndex();
        $value = $column->getFilter()->getValue();
        if ($value == 'null') {
            $collection->addFieldToFilter($field, array('null' => true));
        } else {
            $collection->addFieldToFilter($field, array('notnull' => true));
        }
    }
}